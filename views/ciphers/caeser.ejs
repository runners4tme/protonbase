<!DOCTYPE html>
<html>

  <% include ../components/head %>

  <body>

    <% include ../components/header %>

    <div class="ceaser">

      <h4 class="name">Caeser Cipher</h4>

      <h5 class="description">Encryption</h5>

      <div class="row">
        <p class="descriptionBody col s8 offset-s2">
          A ceaser cipher is a monoalphabetic substitution cipher.
          It works by adding a key repeatedly to the of the letters in the plaintext where the letters of the alphabet represent keys
          in this order A = 0 and Z = 25 and the addition is computed modulo 26. Therefore it has 26 possible encryption keys.
        </p>
        <p class="descriptionBody col s8 offset-s2">
          Mathematically we denote the ciphertext as C = P + K mod 26.
          Where C is the Ciphertext, P is the plaintext and K is the key.
        </p>
        <p class="descriptionBody col s8 offset-s2">
          Here is the implementation of the encryption process:
        </p>
        <ol class="algorithm col s8 offset-s2">
          <li>Loop through each letter of the plaintext.</li>
          <li>Check if that letter is part of the alphabet order.</li>
          <li>If it is part of it, add the key to the position of that letter in the alphabet order.</li>
          <li>If the result is ever above the range of 0 and 25</li>
          <li>Subtract 26 to bring the number to our desired range.</li>
          <li>If it is not part of it, add it to the ciphertext.</li>
          <li>Return the plaintext and ciphertext.</li>
        </ol>
        <p class="descriptionBody col s8 offset-s2">
          It is important to note that in step 6, since space or any of the other special characters are not part of the alphabet order,
          they will be added to the ciphertext in their original form. This cipher is quite straight forward and easy to understand.
        </p>
      </div>

      <h5 class="description">Decryption</h5>

       <div class="row">
          <p class="descriptionBody col s8 offset-s2">
           To decrypt is also simple, we just have to do the opposite of how we encrypted the message above.
         </p>
         <p class="descriptionBody col s8 offset-s2">
           Here is the implementation of the decryption process:
         </p>
         <ol class="algorithm col s8 offset-s2">
           <li>Loop through each letter of the ciphertext.</li>
           <li>Check if that letter is part of the alphabet order.</li>
           <li>If it is part of it, add subtract key to the position of that letter in the alphabet order.</li>
           <li>If the result is ever above the range of 0 and 25</li>
           <li>Add 26 to bring the number to our desired range.</li>
           <li>If it is not part of it, add it to the plaintext.</li>
           <li>Return the plaintext and ciphertext.</li>
         </ol>
         <p class="descriptionBody col s8 offset-s2">
           Mathematically we denote the plaintext as P = C + Ke mod 26.
           The C is the ciphertext, P is the plaintext and Ke is the key.
         </p>
         <p class="descriptionBody col s8 offset-s2">
           The problem with this cipher is that is is easy to break because it only has 26 keys.
           We can break it by trying all the 26 keys and the key that will return the plaintext
           that is readable is the encryption key that was used for the ciphertext.
           This process is called the brute-force attack. We can hack it in a matter of milliseconds.
           You can encrypt and decrypt your message in the empty box tos test it.
         </p>
      </div>

      <div class="row">
        <div class="col s8 offset-s2">
          <div class="console">

            <div class="row">
              <div class="col s12">
                <div class="text_container">
                </div>
              </div>
            </div>

            <div class="row">
              <div class="input-field col s12">
                <i class="fa fa-chevron-right"></i>
                <textarea id="textareaCaeser" class="materialize-textarea"></textarea>
             </div>
            </div>

          </div>
        </div>
      </div>

      <div class="row">
        <div class="col s12">
          <button id="encryptCaeser" class="activate button">Encrypt</button>
          <button id="decryptCaeser" class="activate button">Decrypt</button>
        </div>
      </div>


    </div>

    <% include ../components/script %>

  </body>
</html>
