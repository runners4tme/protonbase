<!DOCTYPE html>
<html>

  <% include ../components/head %>

  <body>

    <% include ../components/header %>

    <div class="transposition">

      <h4 class="name">Transposition Cipher</h4>

      <h5 class="description">Encryption</h5>

      <div class="row">
        <p class="descriptionBody col s8 offset-s2">
          A transposition cipher is a all about confusion. It is a cipher where the letters are rearranged.
          It is about using a key to jumble the letters of the plaintext so that it becomes unreadable.
          We are going to look at the a simple columner transposition where the letters of the plaintext are
          divided into columns using an encryption key. This cipher is easy to grasp, we devide the plaintext into columns,
          the columns are the length of the key. Then we loop through the columns which are horizontal until we get to the end
          of all the characters of the plaintext. This cipher is not appropriate for long messages.
        </p>
        <p class="descriptionBody col s8 offset-s2">
          Here is the implementation of the encryption process:
        </p>
        <ol class="algorithm col s8 offset-s2">
          <li>Create columns that are the length of the key.</li>
          <li>Loop through each letter of the plaintext.</li>
          <li>Allocate each letter of the plaintext from the left column to the right column.</li>
          <li>Get ciphertext by reading the column vertically column by column from left to right.</li>
          <li>Return the plaintext and ciphertext.</li>
        </ol>
      </div>

      <div class="row">
        <div class="col s8 offset-s2">
          <pre class="prettyprint">
            function encrypt(object){

              var plaintext = object.msg;
              var key = 5;
              var text = new Array(key);

              for (j = 0; j < key; j++) {
                if (text[j] === undefined) {
                  text[j] = "";
                }
              }

              for (i = 0; i < key; i++) {
                var pointer = i;
                while (pointer < plaintext.length) {
                   text[i] = text[i] + plaintext[pointer]
                   pointer = pointer + key
                }
              }

              var ciphertext = text.join("");

              return { plaintext:plaintext, ciphertext:ciphertext }

            }
          </pre>
        </div>
      </div>

      <h5 class="description">Decryption</h5>

      <div class="row">
        <p class="descriptionBody col s8 offset-s2">
          To decrypt the transposition cipher we need to first figure out the number of the columns that the rows formed,
          this is the length of the key used, we also need to figure out the number of rows which is the length of the message
          over the key. This will allow us to draw a grid of boxes where we can just fill in the letters and we
          also have to calculate the empty spaces because not all the columns will have the same length.
        </p>
        <p class="descriptionBody col s8 offset-s2">
          Here is the implementation of the decryption process:
        </p>
        <ol class="algorithm col s8 offset-s2">
          <li>Create columns that are half the length of the key.</li>
          <li>And the number of rows which is the length of the message divide by the key.</li>
          <li>Calculate the number of empty spaces.</li>
          <li>Check if that letter is part of the alphabet order.</li>
          <li>Loop through each letter of the ciphertext.</li>
          <li>Fill up the spaces from from left to right while skipping the empty space.</li>
          <li>Get plaintext from reading the columns vertically column by column from left to right.</li>
          <li>Return the plaintext and ciphertext.</li>
        </ol>
        <p class="descriptionBody col s8 offset-s2">
          To hack the transposition cipher is a bit complex, it is possible to do it with brute-force attack.
          We have to try every single key and the one that will result in english that we can read is likely the encryption key.
          We simply loops each word and see if it can be found in an english dictionary and if it can be found,
          The more words are found in the dictionary per key, the higher the chances of that encryption key been correct.
        </p>
      </div>


            <div class="row">
              <div class="col s8 offset-s2">
                <pre class="prettyprint">
                  function decrypt(object) {

                    ciphertext = object.msg;
                    key = 5;
                    numOfColumns = Math.ceil(ciphertext.length/key);
                    numOfRows = key
                    numOfShadedBoxes = (numOfColumns * numOfRows) - ciphertext.length
                    text = new Array(numOfColumns)

                    for (j = 0; j < numOfColumns ; j++) {
                      if (text[j] === undefined) {
                        text[j] = "";
                      }
                    }

                    col = 0
                    row = 0

                    for(i = 0; i < ciphertext.length; i++) {
                      text[col] = text[col] + ciphertext[i]
                      col = col + 1
                      if (col === numOfColumns || col === (numOfColumns - 1) && row >= (numOfRows - numOfShadedBoxes)) {
                        col = 0
                        row = row + 1
                      }
                    }

                    var plaintext = text.join("");

                    return { plaintext:plaintext, ciphertext:ciphertext }

                  }
                </pre>
              </div>
            </div>

      <div class="row">
        <div class="col s8 offset-s2">
          <div class="console">

            <div class="row">
              <div class="col s12">
                <div class="text_container">
                </div>
              </div>
            </div>

            <div class="row">
              <div class="input-field col s12">
                <i class="fa fa-chevron-right"></i>
                <textarea id="textareaTrans" class="materialize-textarea"></textarea>
             </div>
            </div>

          </div>
        </div>
      </div>

      <div class="row">
        <div class="col s12">
          <button id="encryptTrans" class="activate button">Encrypt</button>
          <button id="decryptTrans" class="activate button">Decrypt</button>
        </div>
      </div>

    </div>

    <% include ../components/footer %>

    <% include ../components/script %>

  </body>
</html>
